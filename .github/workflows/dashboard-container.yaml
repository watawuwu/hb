name: Build and Push Dashboard Container

on:
  push:
    branches:
    - main
    - 'hb-dashboard/*'
    tags:
    - 'hb-dashboard-*'
    paths:
    - 'dashboard/*'
    - '.github/workflows/dashboard-container.yaml'

env:
  NAME: hb-dashboard

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:

  build-push:
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
        include:
        - arch: amd64
          runs-on: ubuntu-24.04
        - arch: arm64
          runs-on: ubuntu-24.04-arm

    runs-on: ${{ matrix.runs-on }}

    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    steps:

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-${{ matrix.arch }}-buildx-${{ github.sha }}
        restore-keys: ${{ runner.os }}-${{ matrix.arch }}-buildx-

    - name: Setup code
      uses: actions/checkout@v4

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.actor }}/${{ env.NAME }}
        tags: |
          type=raw,value=latest
          type=match,pattern=${{ env.NAME }}-v(\d.\d.\d),group=1
          type=match,pattern=${{ env.NAME }}-v(\d.\d),group=1
          type=match,pattern=${{ env.NAME }}-v(\d),group=1

    - name: Addition meta
      id: add-meta
      run: |
        # multiline-strings
        # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions#multiline-strings

        echo "tags<<EOF" >> ${GITHUB_OUTPUT}

        while read -r tag; do
          echo "${tag}-${{ matrix.arch }}" >> ${GITHUB_OUTPUT}
        done <<< "${{ steps.meta.outputs.tags }}"

        echo "EOF" >> ${GITHUB_OUTPUT}

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push for ${{ matrix.arch }}
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/${{ matrix.arch }}
        push: true
        tags: ${{ steps.add-meta.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        file: dashboard/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          APP_NAME=${{ env.NAME }}

    - name: Update caches
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ghcr.io/${{ github.actor }}/${{ env.NAME }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true

  manifest:
    needs: build-push
    name: Push Container Manifest
    runs-on: ubuntu-latest

    steps:

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Push manifest
      run: |
        while read -r tag; do
          echo "Pushing manifest for ${tag}"
          echo "docker buildx imagetools create --tag ${tag} ${tag}-amd64 ${tag}-arm64"
          docker buildx imagetools create --tag ${tag} ${tag}-amd64 ${tag}-arm64
        done <<< "${{ needs.build-push.outputs.tags }}"
