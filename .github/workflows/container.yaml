name: Container

on:
  push:
    branches:
    - main
    tags:
    - '**'

env:
  NAME: hb

jobs:
  push_container:
    name: Push Container
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: ${{ runner.os }}-buildx-

    - name: Setup code
      uses: actions/checkout@v4

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.actor }}/${{ env.NAME }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=match,pattern=${{ env.NAME }}-v(\d.\d.\d),group=1
          type=match,pattern=${{ env.NAME }}-v(\d.\d),group=1
          type=match,pattern=${{ env.NAME }}-v(\d),group=1

    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: ${{ startsWith(github.ref, 'refs/tags/v*.*.*') && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        file: client/Dockerfile
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          APP_NAME=hb

    - name: Update caches
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ghcr.io/${{ github.actor }}/${{ env.NAME }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
